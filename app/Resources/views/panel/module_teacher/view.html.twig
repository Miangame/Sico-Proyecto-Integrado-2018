{% extends 'panel/base.html.twig' %}
{% block title %}SICO: Módulos-profesor{% endblock %}

{% set class = "" %}

{% if actualHours != totalHours %}
    {% set class = 'warning_state' %}
{% else %}
    {% set class = 'ok_state' %}
{% endif %}

{% block body %}
    <h2>Gestión de curso/módulo/profesor</h2>
    <a href="{{ path('new_distribution_module_teacher') }}" class="waves-effect waves-light btn">Crear asignación</a>
    <div id="containerSelectConvocatoryStudent">
        <select name="" id="selectGroupDistribution">
            <option value="todos">- Elija grupo -</option>
            {% for group in groups %}
                <option value="{{ group.id }}">{{ group.__toString() }}</option>
            {% endfor %}
        </select>
    </div>
    <div id="containerSelectCycleStudent">
        <select name="" id="selectCourseDistribution">
            {% for course in courses %}
                <option value="{{ course.course }}">{{ course.course }}</option>
            {% endfor %}
        </select>
    </div>
    <table class=" responsive-table z-depth-1 centered mt-2">
        <thead>
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th id="resumenHoras"></th>
            <th></th>
            <th id="resumenHorasDesdoble"></th>
            <th></th>
            <th></th>
        </tr>
        </thead>
        <thead class="table-sticky">
        <tr>
            <th>Profesor</th>
            <th>Módulo</th>
            <th>Grupo</th>
            <th>Horas</th>
            <th>Curso</th>
            <th>Desdoble</th>
            <th>Modificar</th>
            <th>Borrar</th>
        </tr>
        </thead>
        <tbody id="distributionTable">
        {% for moduleTeacher in modulesTeachers %}
            <tr>
                <td>{{ moduleTeacher.teacher }}</td>
                <td>{{ moduleTeacher.module }}</td>
                <td>{{ moduleTeacher.gr }}</td>
                <td>{{ moduleTeacher.hours }}</td>
                <td>{{ moduleTeacher.course }}</td>
                {% if moduleTeacher.desdoble %}
                    <td><i class="small material-icons green-text">check</i></td>
                {% else %}
                    <td><i class="small material-icons red-text">close</i></td>
                {% endif %}
                <td>
                    <a href="{{ path('edit_distribution_module_teacher', {'id': moduleTeacher.id}) }}">
                        <i class="small material-icons">edit</i>
                    </a>
                </td>
                <td>
                    <a data-modal="modalModuleTeacher"
                       href="{{ path('delete_distribution_module_teacher', {'id': moduleTeacher.id}) }}"
                       class="modalDelete modal-trigger">
                        <i class="small material-icons red-text">delete</i>
                    </a>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <!-- Modal Structure -->
    <div id="modalModuleTeacher" class="modal">
        <div class="modal-content">
            <p>¿Está seguro de borrar la asignación?</p>
        </div>
        <div class="modal-footer">
            <a href="#"
               class="actionDelete modal-close waves-effect waves-green btn-flat">Si</a>
            <a href="#" class="modal-close waves-effect waves-green btn-flat">Cancelar</a>
        </div>
    </div>

    <script>
        {
            let resumenHoras;
            let resumenHorasDesdoble;

            let changeData = function () {
                let distributions = "";

                let tr, td, i, tdDesdoble;
                let hours = "";
                let group = $('#selectGroupDistribution option:selected').text();
                let contadorHorasActuales = 0;
                let contadorHorasDesdobleActuales = 0;
                let textResumenHoras = "";
                let textResumenHorasDesdoble = "";
                let horasTotales = 0;
                let horasTotalesDesdoble = 0;

                $("tbody").html("");
                $.ajax({
                        type: "GET",
                        url: "{{ path('get_distribution_data') }}",
                        data: {'course': $(this).val()},
                        success: function (response) {
                            let html = "";
                            let icon = "";
                            distributions = JSON.parse(response.distributions);
                            distributions.forEach(function (distribution) {
                                if (distribution.desdoble) {
                                    contadorHorasDesdobleActuales += distribution.hours
                                } else {
                                    contadorHorasActuales += distribution.hours
                                }

                                let id = distribution.id;

                                let url = "{{ path('edit_distribution_module_teacher', {'id': 'idDist'}) }}";
                                let url2 = "{{ path('delete_distribution_module_teacher', {'id': 'idDist'}) }}";

                                url = url.replace("idDist", id);
                                url2 = url2.replace("idDist", id);

                                if (distribution.desdoble) {
                                    icon = "<i class=\"small material-icons green-text\">check</i>";
                                } else {
                                    icon = "<i class=\"small material-icons red-text\">close</i>";
                                }

                                html += "" +
                                    "<tr>" +
                                    "<td>" + distribution.teacher + "</td>" +
                                    "<td>" + distribution.module + "</td>" +
                                    "<td>" + distribution.gr + "</td>" +
                                    "<td>" + distribution.hours + "</td>" +
                                    "<td>" + distribution.course + "</td>" +
                                    "<td>" + icon + "</td>" +
                                    "<td><a href=\"" + url + "\"><i class=\"small material-icons\">edit</i></a></td>" +
                                    "<td><a data-modal=\"modalModuleTeacher\" href=\"" + url2 + "\" class=\"modalDelete modal-trigger\"><i class=\"small material-icons red-text\">delete</i></a></td>" +
                                    "</tr>";
                            });

                            $("tbody").html(html);
                            cargarModalDelete()
                        }
                    }
                );

                $.ajax({
                    type: "GET",
                    url: "{{ path('get_totalHours_data') }}",
                    data: {'schoolYear': $("#selectCourseDistribution").val()},
                    success: function (response) {
                        hours = JSON.parse(response.hours);

                        horasTotales = hours[0].totalHours;
                        horasTotalesDesdoble = hours[0].totalHoursDesdoble;


                        textResumenHoras = contadorHorasActuales + "/" + horasTotales;
                        textResumenHorasDesdoble = contadorHorasDesdobleActuales + "/" + horasTotalesDesdoble;

                        if (contadorHorasActuales > horasTotales) {
                            resumenHoras.addClass("warning_up_state");
                        } else if (contadorHorasActuales < horasTotales) {
                            resumenHoras.addClass("warning_state");
                        } else {
                            resumenHoras.addClass("ok_state");
                        }

                        if (contadorHorasDesdobleActuales > horasTotalesDesdoble) {
                            resumenHorasDesdoble.addClass("warning_up_state");
                        } else if (contadorHorasDesdobleActuales < horasTotalesDesdoble) {
                            resumenHorasDesdoble.addClass("warning_state");
                        } else {
                            resumenHorasDesdoble.addClass("ok_state");
                        }

                        resumenHoras.html(textResumenHoras);
                        resumenHorasDesdoble.html(textResumenHorasDesdoble);

                    }
                });
            };

            let changeCourse = function () {
                let tr, td, i, tdDesdoble;
                let hours = "";
                let group = $('#selectGroupDistribution option:selected').text();
                let contadorHorasActuales = 0;
                let contadorHorasDesdobleActuales = 0;
                let textResumenHoras = "";
                let textResumenHorasDesdoble = "";
                let horasTotales = 0;
                let horasTotalesDesdoble = 0;

                tr = $("#distributionTable tr");

                for (i = 0; i < tr.length; i++) {

                    if (group === "- Elija grupo -") {
                        tr[i].style.display = "";
                    } else {
                        td = tr[i].getElementsByTagName("td")[2];
                        if (td) {
                            if (td.innerHTML.toUpperCase() === group.toUpperCase()) {
                                tr[i].style.display = "";
                            } else {
                                tr[i].style.display = "none";
                            }
                        }
                    }
                }

                for (i = 0; i < tr.length; i++) {
                    td = tr[i].getElementsByTagName("td")[3];
                    tdDesdoble = tr[i].getElementsByTagName("td")[5];

                    if (tr[i].style.display === "") {
                        if (tdDesdoble.getElementsByTagName("i")[0].innerHTML === "close") {
                            contadorHorasActuales += parseInt(td.innerHTML);
                        } else if (tdDesdoble.getElementsByTagName("i")[0].innerHTML === "check") {
                            contadorHorasDesdobleActuales += parseInt(td.innerHTML);
                        }

                    }
                }

                $.ajax({
                    type: "GET",
                    url: "{{ path('get_hours_data') }}",
                    data: {'idGroup': $(this).val(), 'schoolYear': $("#selectCourseDistribution").val()},
                    success: function (response) {
                        hours = JSON.parse(response.hours);
                        if (group === "- Elija curso -") {
                            horasTotales = {{ totalHours[0].totalHours }};
                            horasTotalesDesdoble = {{ totalHours[0].totalHoursDesdoble }};
                        } else {
                            horasTotales = hours[0].totalHours;
                            horasTotalesDesdoble = hours[0].totalHoursDesdoble;
                        }

                        textResumenHoras = contadorHorasActuales + "/" + horasTotales;
                        textResumenHorasDesdoble = contadorHorasDesdobleActuales + "/" + horasTotalesDesdoble;

                        if (contadorHorasActuales > horasTotales) {
                            resumenHoras.addClass("warning_up_state");
                        } else if (contadorHorasActuales < horasTotales) {
                            resumenHoras.addClass("warning_state");
                        } else {
                            resumenHoras.addClass("ok_state");
                        }

                        if (contadorHorasDesdobleActuales > horasTotalesDesdoble) {
                            resumenHorasDesdoble.addClass("warning_up_state");
                        } else if (contadorHorasDesdobleActuales < horasTotalesDesdoble) {
                            resumenHorasDesdoble.addClass("warning_state");
                        } else {
                            resumenHorasDesdoble.addClass("ok_state");
                        }

                        resumenHoras.html(textResumenHoras);
                        resumenHorasDesdoble.html(textResumenHorasDesdoble);

                    }
                });


            };

            $(function () {
                $("#selectCourseDistribution").on("change", changeData);
                $("#selectGroupDistribution").on("change", changeCourse);

                resumenHoras = $("#resumenHoras");
                resumenHorasDesdoble = $("#resumenHorasDesdoble");

            });
        }
    </script>
{% endblock %}
